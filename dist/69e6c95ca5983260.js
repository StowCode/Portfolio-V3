import"./main.css";import*as THREE from"three";import{TWEEN}from"three/examples/jsm/libs/tween.module.min.js";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader.js";import{DRACOLoader}from"three/examples/jsm/loaders/DRACOLoader.js";const dracoLoader=new DRACOLoader,loader=new GLTFLoader;dracoLoader.setDecoderPath("https://www.gstatic.com/draco/v1/decoders/"),dracoLoader.setDecoderConfig({type:"js"}),loader.setDRACOLoader(dracoLoader);const container=document.getElementById("canvas"),scene=new THREE.Scene;scene.background=new THREE.Color("rgb(22,22,22)");const sizes={width:window.innerWidth,height:window.innerHeight},renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0});renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.setSize(sizes.width,sizes.height),renderer.outputEncoding=THREE.sRGBEncoding,container.appendChild(renderer.domElement),renderer.setClearColor(0,0);const camera=new THREE.PerspectiveCamera(55,window.innerWidth/window.innerHeight,.001,100);camera.position.set(0,0,1),scene.add(camera);const controls=new OrbitControls(camera,renderer.domElement);window.addEventListener("resize",(()=>{const e=window.innerWidth,t=window.innerHeight;camera.aspect=e/t,camera.updateProjectionMatrix(),renderer.setSize(e,t),renderer.setPixelRatio(2)}));const ambient=new THREE.AmbientLight(10526972,.82);scene.add(ambient);const sunLight=new THREE.DirectionalLight(15254395,1.96);function introAnimation(){controls.enabled=!1,new TWEEN.Tween(camera.position.set(26,4,-35)).to({x:16,y:50,z:-.1},6500).delay(1e3).easing(TWEEN.Easing.Quartic.InOut).start().onComplete((function(){controls.enabled=!0,setOrbitControlsLimits(),TWEEN.remove(this)}))}function setOrbitControlsLimits(){controls.enableDamping=!0,controls.dampingFactor=1,controls.minDistance=35,controls.maxDistance=60,controls.enableRotate=!0,controls.enableZoom=!1,controls.maxPolarAngle=Math.PI/2.5,controls.autoRotate=!0,controls.autoRotateSpeed=3}function renderLoop(){TWEEN.update(),controls.update(),renderer.render(scene,camera),requestAnimationFrame(renderLoop)}function mobileMenu(){"block"==document.getElementById("mobilenavlinkcontainer").style.display?document.getElementById("mobilenavlinkcontainer").style.display="none":document.getElementById("mobilenavlinkcontainer").style.display="block"}function mobileLinkClick(){document.getElementById("mobilenavlinkcontainer").style.display="none"}sunLight.position.set(-69,44,14),scene.add(sunLight),loader.load("models/gltf/space_exploration_wlp_series_8.glb",(function(e){e.scene.position.y=4,scene.add(e.scene)})),setOrbitControlsLimits(),renderLoop(),document.getElementById("hamburger").addEventListener("click",mobileMenu);const options={root:null,rootMargin:"0px",threshold:0},bio=document.getElementById("biocontainer"),wtf=document.getElementById("wtf"),portfolio=document.getElementById("portfolio"),weather=document.getElementById("weather"),todo=document.getElementById("todolist"),three_js=document.getElementById("three_js_demo");function IntersectionSlideUp(e){e.map((e=>{e.intersectionRatio>0&&(e.isIntersecting?e.target.classList.add("slideUp"):e.target.classList.remove("slideUp"))}))}const observer=new IntersectionObserver(IntersectionSlideUp,options);function parallax(e){this.querySelectorAll(".layer").forEach((t=>{const o=t.getAttribute("data-speed"),n=(window.innerWidth-e.pageX*o)/100,r=(window.innerHeight-e.pageY*o)/100;t.style.transform=`translateX(${n}px) translateY(${r}px)`}))}observer.observe(bio),observer.observe(wtf),observer.observe(portfolio),observer.observe(weather),observer.observe(todo),observer.observe(three_js),document.addEventListener("mousemove",parallax);const geo1=document.getElementById("geo1"),geo2=document.getElementById("geo2"),geo3=document.getElementById("geo3"),geo4=document.getElementById("geo4");window.addEventListener("scroll",(function(){var e=window.scrollY;geo1.style.marginLeft=-.5*e+"px",geo3.style.marginLeft=-1*e+"px",geo2.style.marginRight=-.5*e+"px",geo4.style.marginRight=-1*e+"px"}));